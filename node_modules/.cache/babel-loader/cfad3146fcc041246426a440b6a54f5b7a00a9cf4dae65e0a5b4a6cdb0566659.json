{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anuraag\\\\Documents\\\\project\\\\005 01-starting-setup\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\ExpensesChart.js\";\nimport React from \"react\";\nimport '../Chart/Chart';\nimport Chart from '../Chart/Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpensesChart = props => {\n  const chartDataPoints = [{\n    label: \"Jan\",\n    value: 0\n  }, {\n    label: \"Feb\",\n    value: 0\n  }, {\n    label: \"Mar\",\n    value: 0\n  }, {\n    label: \"Apr\",\n    value: 0\n  }, {\n    label: \"May\",\n    value: 0\n  }, {\n    label: \"Jun\",\n    value: 0\n  }, {\n    label: \"Jul\",\n    value: 0\n  }, {\n    label: \"Aug\",\n    value: 0\n  }, {\n    label: \"Sep\",\n    value: 0\n  }, {\n    label: \"Oct\",\n    value: 0\n  }, {\n    label: \"Nov\",\n    value: 0\n  }, {\n    label: \"Dec\",\n    value: 0\n  }];\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n};\n_c = ExpensesChart;\nexport default ExpensesChart;\nvar _c;\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["React","Chart","jsxDEV","_jsxDEV","ExpensesChart","props","chartDataPoints","label","value","expense","expenses","expenseMonth","date","getMonth","amount","dataPoints","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Anuraag/Documents/project/005 01-starting-setup/01-starting-setup/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import React from \"react\";\r\nimport '../Chart/Chart'\r\nimport Chart from '../Chart/Chart'\r\nconst ExpensesChart = props =>{\r\n\r\n    const chartDataPoints = [\r\n        {label:\"Jan\" , value:0},\r\n        {label:\"Feb\" , value:0},\r\n        {label:\"Mar\" , value:0},\r\n        {label:\"Apr\" , value:0},\r\n        {label:\"May\" , value:0},\r\n        {label:\"Jun\" , value:0},\r\n        {label:\"Jul\" , value:0},\r\n        {label:\"Aug\" , value:0},\r\n        {label:\"Sep\" , value:0},\r\n        {label:\"Oct\" , value:0},\r\n        {label:\"Nov\" , value:0},\r\n        {label:\"Dec\" , value:0},\r\n    ]\r\n\r\n    for(const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n    return <Chart dataPoints={chartDataPoints}></Chart>\r\n}\r\nexport default ExpensesChart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,OAAOC,KAAK,MAAM,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAClC,MAAMC,aAAa,GAAGC,KAAK,IAAG;EAE1B,MAAMC,eAAe,GAAG,CACpB;IAACC,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAC;EAAC,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAC;EAAC,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAC;EAAC,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAC;EAAC,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAC;EAAC,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAC;EAAC,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAC;EAAC,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAC;EAAC,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAC;EAAC,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAC;EAAC,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAC;EAAC,CAAC,EACvB;IAACD,KAAK,EAAC,KAAK;IAAGC,KAAK,EAAC;EAAC,CAAC,CAC1B;EAED,KAAI,MAAMC,OAAO,IAAIJ,KAAK,CAACK,QAAQ,EAAC;IAChC,MAAMC,YAAY,GAAGF,OAAO,CAACG,IAAI,CAACC,QAAQ,EAAE;IAC5CP,eAAe,CAACK,YAAY,CAAC,CAACH,KAAK,IAAIC,OAAO,CAACK,MAAM;EACzD;EACA,oBAAOX,OAAA,CAACF,KAAK;IAACc,UAAU,EAAET;EAAgB;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAS;AACvD,CAAC;AAAAC,EAAA,GAtBKhB,aAAa;AAuBnB,eAAeA,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}